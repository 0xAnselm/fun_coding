	.file	"longest_Substring_Without_Repeating_Characters.c"
	.text
	.section	.rodata
	.align 8
.LC0:
	.string	"String %s, Letter %c, right %d\n"
.LC1:
	.string	"Comparing %c and %c\n"
.LC2:
	.string	"Ended with %c\n"
	.text
	.globl	uniqueInSubstring
	.type	uniqueInSubstring, @function
uniqueInSubstring:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, %eax
	movl	%edx, -32(%rbp)
	movb	%al, -28(%rbp)
	movl	$0, -4(%rbp)
	movsbl	-28(%rbp), %edx
	movl	-32(%rbp), %ecx
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC0(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	jmp	.L2
.L5:
	movsbl	-28(%rbp), %edx
	movl	-4(%rbp), %eax
	movslq	%eax, %rcx
	movq	-24(%rbp), %rax
	addq	%rcx, %rax
	movzbl	(%rax), %eax
	movsbl	%al, %eax
	movl	%eax, %esi
	leaq	.LC1(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	-4(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	cmpb	%al, -28(%rbp)
	je	.L3
	addl	$1, -4(%rbp)
	jmp	.L2
.L3:
	movl	-4(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movsbl	%al, %eax
	movl	%eax, %esi
	leaq	.LC2(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$0, %eax
	jmp	.L4
.L2:
	movl	-4(%rbp), %eax
	cmpl	-32(%rbp), %eax
	jl	.L5
	movl	$10, %edi
	call	putchar@PLT
	movl	-4(%rbp), %eax
.L4:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	uniqueInSubstring, .-uniqueInSubstring
	.section	.rodata
.LC3:
	.string	"l_max: %d\n\n"
	.text
	.globl	lengthOfLongestSubstring
	.type	lengthOfLongestSubstring, @function
lengthOfLongestSubstring:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	$0, -16(%rbp)
	movl	$1, -12(%rbp)
	jmp	.L7
.L12:
	movl	-16(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -8(%rbp)
	movl	$1, -4(%rbp)
	jmp	.L8
.L10:
	addl	$1, -8(%rbp)
	addl	$1, -4(%rbp)
.L8:
	movl	-8(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	testb	%al, %al
	je	.L9
	movl	-8(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movsbl	%al, %eax
	movl	-16(%rbp), %edx
	movslq	%edx, %rcx
	movq	-24(%rbp), %rdx
	addq	%rdx, %rcx
	movl	-8(%rbp), %edx
	movl	%eax, %esi
	movq	%rcx, %rdi
	call	uniqueInSubstring
	testl	%eax, %eax
	jne	.L10
.L9:
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC3(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	-4(%rbp), %eax
	cmpl	-12(%rbp), %eax
	jle	.L11
	movl	-4(%rbp), %eax
	movl	%eax, -12(%rbp)
.L11:
	addl	$1, -16(%rbp)
.L7:
	movl	-16(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	testb	%al, %al
	jne	.L12
	movl	-12(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	lengthOfLongestSubstring, .-lengthOfLongestSubstring
	.section	.rodata
.LC4:
	.string	"Max substring: %d\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$1802991472, -15(%rbp)
	movl	$7824747, -12(%rbp)
	leaq	-15(%rbp), %rax
	movq	%rax, %rdi
	call	lengthOfLongestSubstring
	movl	%eax, %esi
	leaq	.LC4(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rdx
	subq	%fs:40, %rdx
	je	.L16
	call	__stack_chk_fail@PLT
.L16:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	main, .-main
	.ident	"GCC: (GNU) 12.2.0"
	.section	.note.GNU-stack,"",@progbits
